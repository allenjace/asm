     1                                 %line 1+1 assignment2.s
     2                                 [section .data]
     3                                 
     4                                 BUFLEN: equ 20
     5 00000000 00<rept>               buffer: times BUFLEN db 0
     6 00000014 0A                     newline: db 10
     7                                 
     8                                 [section .text]
     9                                 
    10                                 [global _start]
    11                                 _start:
    12                                 
    13 00000000 48C7C601000000          mov rsi, 1
    14 00000007 48C7C70A000000          mov rdi, 10
    15 0000000E E834000000              call print_int
    16                                 
    17 00000013 48C7C601000000          mov rsi, 1
    18 0000001A 48C7C732B71E0B          mov rdi, 186562354
    19 00000021 E821000000              call print_int
    20                                 
    21 00000026 48C7C601000000          mov rsi, 1
    22 0000002D 48BF78563412EFBEAD-     mov rdi, 0xdeadbeef12345678
    23 0000002D DE                 
    24 00000037 E80B000000              call print_int
    25                                 
    26                                 
    27 0000003C 48C7C03C000000          mov rax, 60
    28 00000043 48C7C700000000          mov rdi, 0
    29 0000004A 0F05                    syscall
    30                                 
    31                                 print_int:
    32                                 
    33                                 
    34 0000004C 4D31D2                  xor r10, r10
    35 0000004F 48C7C114000000          mov rcx, BUFLEN
    36 00000056 49C7C2[00000000]        mov r10, buffer
    37 0000005D 4983C213                add r10, BUFLEN - 1
    38 00000061 4889F8                  mov rax, rdi
    39 00000064 4889FB                  mov rbx, rdi
    40 00000067 49C7C00A000000          mov r8, 10
    41                                 
    42                                 .begin_loop:
    43 0000006E 4831D2                  xor rdx, rdx
    44 00000071 49F7F0                  div r8
    45 00000074 4883C230                add rdx, 48
    46 00000078 418812                  mov byte[r10], dl
    47 0000007B 49FFCA                  dec r10
    48                                 
    49 0000007E E2EC                    loop .begin_loop
    50                                 
    51                                 
    52 00000080 48C7C001000000          mov rax, 1
    53 00000087 48C7C701000000          mov rdi, 1
    54 0000008E 48C7C6[00000000]        mov rsi, buffer
    55 00000095 48C7C214000000          mov rdx, BUFLEN
    56 0000009C 0F05                    syscall
    57                                 
    58 0000009E 48C7C001000000          mov rax, 1
    59 000000A5 48C7C701000000          mov rdi, 1
    60 000000AC 48C7C6[00000000]        mov rsi, newline
    61 000000B3 48C7C201000000          mov rdx, 1
    62 000000BA 0F05                    syscall
    63                                 
    64 000000BC C3                      ret
